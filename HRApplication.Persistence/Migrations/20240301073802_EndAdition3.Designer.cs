// <auto-generated />
using System;
using HRApplication.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRApplication.Persistence.Migrations
{
    [DbContext(typeof(HRApplicationDBContext))]
    [Migration("20240301073802_EndAdition3")]
    partial class EndAdition3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HRApplication.Domain.EmployeeManagement.TblDepartmentInfo", b =>
                {
                    b.Property<long>("IntPrimaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntPrimaryId"));

                    b.Property<DateTime>("DteCtratedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IntAccountId")
                        .HasColumnType("int");

                    b.Property<long>("IntCreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("IntUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrDepartmentCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StrDepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IntPrimaryId");

                    b.ToTable("TblDepartmentInfo", "emp");

                    b.HasData(
                        new
                        {
                            IntPrimaryId = 1L,
                            DteCtratedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DteUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IntAccountId = 0,
                            IntCreatedBy = 0L,
                            IntUpdatedBy = 0L,
                            IsActive = false,
                            StrDepartmentCode = "ADM001",
                            StrDepartmentName = "Administration"
                        });
                });

            modelBuilder.Entity("HRApplication.Domain.EmployeeManagement.TblDesignationInfo", b =>
                {
                    b.Property<long>("IntPrimaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntPrimaryId"));

                    b.Property<DateTime>("DteCtratedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IntAccountId")
                        .HasColumnType("int");

                    b.Property<long>("IntCreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("IntUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrDesignationCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StrDesignationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IntPrimaryId");

                    b.ToTable("TblDesignationInfo", "emp");

                    b.HasData(
                        new
                        {
                            IntPrimaryId = 1L,
                            DteCtratedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DteUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IntAccountId = 0,
                            IntCreatedBy = 0L,
                            IntUpdatedBy = 0L,
                            IsActive = false,
                            StrDesignationCode = "ADM001",
                            StrDesignationName = "Admin"
                        });
                });

            modelBuilder.Entity("HRApplication.Domain.EmployeeManagement.TblEmployeeBasicInfo", b =>
                {
                    b.Property<long>("IntPrimaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntPrimaryId"));

                    b.Property<DateTime>("DteCtratedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DteDateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IntAccountId")
                        .HasColumnType("int");

                    b.Property<long>("IntCreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("IntDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("IntDesignationId")
                        .HasColumnType("bigint");

                    b.Property<long>("IntGenderId")
                        .HasColumnType("bigint");

                    b.Property<long>("IntReligionId")
                        .HasColumnType("bigint");

                    b.Property<long>("IntUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrEmployeeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StrEmployeeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IntPrimaryId");

                    b.HasIndex("IntDepartmentId");

                    b.HasIndex("IntDesignationId");

                    b.HasIndex("IntGenderId");

                    b.HasIndex("IntReligionId");

                    b.ToTable("TblEmployeeBasicInfo", "emp");
                });

            modelBuilder.Entity("HRApplication.Domain.EmployeeManagement.TblGenderInfo", b =>
                {
                    b.Property<long>("IntPrimaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntPrimaryId"));

                    b.Property<DateTime>("DteCtratedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IntAccountId")
                        .HasColumnType("int");

                    b.Property<long>("IntCreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("IntUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrGenderCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StrGenderName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IntPrimaryId");

                    b.ToTable("TblGenderInfo", "emp");

                    b.HasData(
                        new
                        {
                            IntPrimaryId = 1L,
                            DteCtratedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DteUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IntAccountId = 0,
                            IntCreatedBy = 0L,
                            IntUpdatedBy = 0L,
                            IsActive = false,
                            StrGenderCode = "M",
                            StrGenderName = "Male"
                        },
                        new
                        {
                            IntPrimaryId = 2L,
                            DteCtratedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DteUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IntAccountId = 0,
                            IntCreatedBy = 0L,
                            IntUpdatedBy = 0L,
                            IsActive = false,
                            StrGenderCode = "F",
                            StrGenderName = "Female"
                        },
                        new
                        {
                            IntPrimaryId = 3L,
                            DteCtratedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DteUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IntAccountId = 0,
                            IntCreatedBy = 0L,
                            IntUpdatedBy = 0L,
                            IsActive = false,
                            StrGenderCode = "O",
                            StrGenderName = "Others"
                        });
                });

            modelBuilder.Entity("HRApplication.Domain.EmployeeManagement.TblReligionInfo", b =>
                {
                    b.Property<long>("IntPrimaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntPrimaryId"));

                    b.Property<DateTime>("DteCtratedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IntAccountId")
                        .HasColumnType("int");

                    b.Property<long>("IntCreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("IntUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrReligionCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("StrReligionName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IntPrimaryId");

                    b.ToTable("TblReligionInfo", "emp");

                    b.HasData(
                        new
                        {
                            IntPrimaryId = 1L,
                            DteCtratedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DteUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IntAccountId = 0,
                            IntCreatedBy = 0L,
                            IntUpdatedBy = 0L,
                            IsActive = false,
                            StrReligionCode = "O",
                            StrReligionName = "Others"
                        });
                });

            modelBuilder.Entity("HRApplication.Domain.LeaveApplication.TblLeaveApplication", b =>
                {
                    b.Property<long>("IntPrimaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntPrimaryId"));

                    b.Property<DateOnly>("DteApplicationDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("DteCtratedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DteFromDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DteToDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("DteUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IntAccountId")
                        .HasColumnType("int");

                    b.Property<long>("IntCreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("IntEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long>("IntLeaveTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("IntUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrLeaveReason")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IntPrimaryId");

                    b.HasIndex("IntEmployeeId");

                    b.HasIndex("IntLeaveTypeId");

                    b.ToTable("TblLeaveApplication", "lev");
                });

            modelBuilder.Entity("HRApplication.Domain.LeaveApplication.TblLeaveBalance", b =>
                {
                    b.Property<long>("IntPrimaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntPrimaryId"));

                    b.Property<DateTime>("DteCtratedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IntAccountId")
                        .HasColumnType("int");

                    b.Property<long>("IntCreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("IntEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<int>("IntLeaveBalance")
                        .HasColumnType("int");

                    b.Property<int>("IntLeaveRemaining")
                        .HasColumnType("int");

                    b.Property<int>("IntLeaveTaken")
                        .HasColumnType("int");

                    b.Property<long>("IntLeaveTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("IntUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("IntYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("IntPrimaryId");

                    b.HasIndex("IntEmployeeId");

                    b.HasIndex("IntLeaveTypeId");

                    b.ToTable("TblLeaveBalance", "lev");
                });

            modelBuilder.Entity("HRApplication.Domain.LeaveApplication.TblLeaveTypeInfo", b =>
                {
                    b.Property<long>("IntPrimaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IntPrimaryId"));

                    b.Property<DateTime>("DteCtratedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DteUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IntAccountId")
                        .HasColumnType("int");

                    b.Property<long>("IntCreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("IntUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StrLeaveTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrLeaveTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IntPrimaryId");

                    b.ToTable("TblLeaveTypeInfo", "lev");

                    b.HasData(
                        new
                        {
                            IntPrimaryId = 1L,
                            DteCtratedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DteUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IntAccountId = 0,
                            IntCreatedBy = 0L,
                            IntUpdatedBy = 0L,
                            IsActive = false,
                            StrLeaveTypeCode = "CA001",
                            StrLeaveTypeName = "Casual Leave"
                        },
                        new
                        {
                            IntPrimaryId = 2L,
                            DteCtratedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DteUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IntAccountId = 0,
                            IntCreatedBy = 0L,
                            IntUpdatedBy = 0L,
                            IsActive = false,
                            StrLeaveTypeCode = "SCK002",
                            StrLeaveTypeName = "Sick Leave"
                        });
                });

            modelBuilder.Entity("HRApplication.Domain.MasterConfiguratioDomain.TblAccountInfo", b =>
                {
                    b.Property<int>("IntPrimaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntPrimaryId"));

                    b.Property<string>("StrAccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntPrimaryId");

                    b.ToTable("TblAccountInfo");
                });

            modelBuilder.Entity("HRApplication.Domain.EmployeeManagement.TblEmployeeBasicInfo", b =>
                {
                    b.HasOne("HRApplication.Domain.EmployeeManagement.TblDepartmentInfo", "TblDepartmentInfo")
                        .WithMany("TblEmployeeBasicInfo")
                        .HasForeignKey("IntDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRApplication.Domain.EmployeeManagement.TblDesignationInfo", "TblDesignationInfo")
                        .WithMany("TblEmployeeBasicInfo")
                        .HasForeignKey("IntDesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRApplication.Domain.EmployeeManagement.TblGenderInfo", "TblGenderInfo")
                        .WithMany("TblEmployeeBasicInfo")
                        .HasForeignKey("IntGenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRApplication.Domain.EmployeeManagement.TblReligionInfo", "TblReligionInfo")
                        .WithMany("TblEmployeeBasicInfo")
                        .HasForeignKey("IntReligionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblDepartmentInfo");

                    b.Navigation("TblDesignationInfo");

                    b.Navigation("TblGenderInfo");

                    b.Navigation("TblReligionInfo");
                });

            modelBuilder.Entity("HRApplication.Domain.LeaveApplication.TblLeaveApplication", b =>
                {
                    b.HasOne("HRApplication.Domain.EmployeeManagement.TblEmployeeBasicInfo", "TblEmployeeBasicInfo")
                        .WithMany("TblLeaveApplication")
                        .HasForeignKey("IntEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRApplication.Domain.LeaveApplication.TblLeaveTypeInfo", "TblLeaveTypeInfo")
                        .WithMany("TblLeaveApplication")
                        .HasForeignKey("IntLeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblEmployeeBasicInfo");

                    b.Navigation("TblLeaveTypeInfo");
                });

            modelBuilder.Entity("HRApplication.Domain.LeaveApplication.TblLeaveBalance", b =>
                {
                    b.HasOne("HRApplication.Domain.EmployeeManagement.TblEmployeeBasicInfo", "TblEmployeeBasicInfo")
                        .WithMany("TblLeaveBalance")
                        .HasForeignKey("IntEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRApplication.Domain.LeaveApplication.TblLeaveTypeInfo", "TblLeaveTypeInfo")
                        .WithMany("TblLeaveBalance")
                        .HasForeignKey("IntLeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblEmployeeBasicInfo");

                    b.Navigation("TblLeaveTypeInfo");
                });

            modelBuilder.Entity("HRApplication.Domain.EmployeeManagement.TblDepartmentInfo", b =>
                {
                    b.Navigation("TblEmployeeBasicInfo");
                });

            modelBuilder.Entity("HRApplication.Domain.EmployeeManagement.TblDesignationInfo", b =>
                {
                    b.Navigation("TblEmployeeBasicInfo");
                });

            modelBuilder.Entity("HRApplication.Domain.EmployeeManagement.TblEmployeeBasicInfo", b =>
                {
                    b.Navigation("TblLeaveApplication");

                    b.Navigation("TblLeaveBalance");
                });

            modelBuilder.Entity("HRApplication.Domain.EmployeeManagement.TblGenderInfo", b =>
                {
                    b.Navigation("TblEmployeeBasicInfo");
                });

            modelBuilder.Entity("HRApplication.Domain.EmployeeManagement.TblReligionInfo", b =>
                {
                    b.Navigation("TblEmployeeBasicInfo");
                });

            modelBuilder.Entity("HRApplication.Domain.LeaveApplication.TblLeaveTypeInfo", b =>
                {
                    b.Navigation("TblLeaveApplication");

                    b.Navigation("TblLeaveBalance");
                });
#pragma warning restore 612, 618
        }
    }
}
